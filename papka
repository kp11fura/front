<!DOCTYPE html>
<html lang="en" style="height: 100%;">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Akshar:wght@300..700&display=swap" rel="stylesheet">

    <script src="https://cdn.tailwindcss.com"></script>
    <script src="./main.js"></script>
    <style>
        .custom-shadow {
            box-shadow: inset 3px 4px 20px -1px gray!important;
        }
    </style>
    <style>
    .shape-change-effect:hover {
 border-radius: 30%!important;
    }
    </style>
    <style>
        .zoom-effect:hover {
        transform: scale(0.9);
       }</style>


    <title>TODO</title>
</head>
<body style=" background-color:  #54E1CC; height: 87%">
    <h1 class="grid justify-center text-5xl mt-8 mb-1" style="font-family: Akshar;">TODO APP</h1>
    <card class="block m-5 mt-1 bg-white p-5 rounded-lg shadow-1xl h-full gap-4">
        <div class="flex gap-2">
            <input id="input-post-task" class=" flex justify-text px-5 py-3 w-full text-black rounded-lg duration-300 zoom-effect" style="box-shadow: inset 3px 4px 20px -1px gray"placeholder="Add text..." type="text" name="" id="">           
            <img id="img-post-task"  class="cursor-pointer duration-300 hover:scale-125" src="./images/check.svg" alt="" srcset="">
        </div>
        

        <div class="flex gap-2 mt-2">
            <button style="background-color: #6281D7;" class=" flex justify-center px-10 py-3 w-full text-white rounded-lg duration-300 hover:scale-95">TODO</button>
            <button style="background-color: #AA9696;" class=" flex justify-center px-5 py-3 w-full text-white rounded-lg duration-300 hover:scale-95">COMPLATED</button>
        </div>
        <div class="mt-2">
            <ul class="h-full overflow-y-auto" id="task-container">
                
                <!-- <li class="flex justify-between items-center mt-3 my-1 px-5 py-1 w-full text-black text-xl rounded-lg" style="box-shadow: inset 3px 4px 20px -1px gray">
                    <span class="text-lg">TASK NAME</span>
                    <div class="flex gap-2">
                         <img class="cursor-pointer duration-300 hover:scale-125" src="./images/check.svg" alt="" srcset="">
                         <img class="cursor-pointer duration-300 hover:scale-125" src="./images/Edit.svg" alt="" srcset="">
                         <img class="cursor-pointer duration-300 hover:scale-125" src="./images/Trash.svg" alt="" srcset="">
                     </div>
                 </li> -->
             </ul>
        </div>
    </card>
</body>
</html>
document.addEventListener('DOMContentLoaded', function() {
    const imgTaskAdd = document.getElementById("img-post-task")
    imgTaskAdd.addEventListener('click', function(){
       createTask()
    })
    getTasks()
    //createTask("test", date.toISOString())
}, false)

const mockapiURL = "https://678caea6f067bf9e24e7ed3e.mockapi.io/task"
function getTasks(){
    const container = document.getElementById("task-container")

    fetch(mockapiURL, {
       method: 'GET',
       headers: {'content-type':'application/json'}, 
    }).then(res => {
      if (res.ok) {
            return res.json();
      }
    }).then(tasks => {
      container.innerHTML = ''
      tasks.forEach(task => {
          const taskName = task["name"]
          const li = document.createElement("li")
          li.classList += "shadow custom-shadow flex justify-between items-center mt-3 my-1 px-5 py-1 w-full text-black text-xl rounded-lg duration-300 shape-change-effect "
          li.innerHTML = `<span>${taskName}</span>
                    <div class="flex gap-2">
                        <img class="cursor-pointer duration-300 hover:scale-125" src="./images/check.svg" alt="" srcset="">
                        <img class="cursor-pointer duration-300 hover:scale-125" src="./images/Edit.svg" alt="" srcset="">
                        <img class="cursor-pointer duration-300 hover:scale-125" src="./images/Trash.svg" alt="" srcset="">
                    </div>`
            container.appendChild(li)
            //document.body.insertBefore(itemHtml, container)
            //container.insertBefore(itemHtml)
        });


      }).catch(error => {

      })
}

function createTask(){
    const inputTask = document.getElementById("input-post-task")
    const container = document.getElementById("task-container")
    var date = new Date();
    const newTask = {
        name: inputTask.value,
        is_complated: false,
        created: date.toISOString(),
      };

      fetch(mockapiURL, { method: 'POST',
        headers: {'content-type':'application/json'},
        body: JSON.stringify(newTask)
      }).then(res => {
        inputTask.value = ""
        if (res.ok) {
            return res.json();
        }
      }).then(task => {
        console.log(task)
      }).catch(error => {

      })
}

document.addEventListener('DOMContentLoaded', function() {
    
    var date = new Date();
    console.log(date.toISOString());
    getTasks()
    //createTask("test", date.toISOString())
}, false)

const mockapiURL = "https://678caea6f067bf9e24e7ed3e.mockapi.io/task"
function getTasks(){
    fetch(mockapiURL, {
       method: 'GET',
       headers: {'content-type':'application/json'}, 
    }).then(res => {
        if (res.ok) {
            return res.json();
        }

    }).then(tasks => {
        console.log(tasks);

    }).catch(error => {

    })
}
function createTask(name, time){
    const newTask = {
        name: name,
        is_complated: false,
        created: time,
    };

    fetch(mockapiURL, { method: 'POST',
      headers: {'content-type':'application/json'},
      body: JSON.stringify(newTask)  
    }).then(res => {
      if (res.ok) {
            return res.json();
      }
    }).then(task => {
      console.log(task)
    }).catch(error => {

    })
}
    
